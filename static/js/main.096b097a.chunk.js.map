{"version":3,"sources":["Components/Card-List/cards/card.component.jsx","Components/Card-List/card-list.component.jsx","Components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchfield","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAGaA,G,kBAAM,SAACC,GAAD,OACf,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UACLC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACH,6BAAKL,EAAMI,QAAQE,OACvB,4BAAIN,EAAMI,QAAQG,aCLbC,EAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAU,YAAf,SAEFD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCH7CM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAErB,uBAAOZ,UAAU,SACjBa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC6BGG,E,kDA9Bf,aAAc,IAAD,8BACX,gBACKC,MAAM,CACTR,SAAS,GACTS,YAAY,IAJH,E,gEAOK,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAACf,SAASc,S,+BAItC,IAAD,SAC+BE,KAAKR,MAA7BR,EADP,EACOA,SAASS,EADhB,EACgBA,YACVQ,EAAiBjB,EAASkB,QAAO,SAAAvB,GAAO,OAC5CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAChD,OAEE,sBAAK3B,UAAU,MAAf,UACA,kDACE,cAAC,EAAD,CACAW,YAAY,kBACZC,aAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAS,CAACN,YAAYY,EAAEC,OAAOC,WAEvD,cAAC,EAAD,CAAUvB,SAAUiB,W,GA3BVO,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.096b097a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.style.css\";\r\n\r\nexport const Card =(props) =>(\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" \r\n            src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n            <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n) ","import  React from \"react\";\r\nimport  \"./card-list.style.css\";\r\nimport { Card } from \"./cards/card.component\";\r\nexport const CardList = props=>{\r\n    return <div className=\"card-list\">\r\n      \r\n       { props.monsters.map(monster =>(<Card key={monster.id} monster={monster}/>))}\r\n      \r\n    </div>\r\n}","import React from \"react\"\r\nimport \"./search-box.styles.css\"\r\n\r\nexport const SearchBox = ({placeholder,handleChange})=>\r\n(\r\n    <input className='search' \r\n    type='search'\r\n    placeholder={placeholder}\r\n    onChange={handleChange} />\r\n);","import './App.css';\nimport React ,{ Component } from 'react';\nimport { CardList } from \"./Components/Card-List/card-list.component\";\nimport {SearchBox} from \"./Components/search-box/search-box.component\";\n\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state={\n      monsters:[ ],\n      searchfield:''\n    };\n}\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .then(users => this.setState({monsters:users}))\n};\n\n  render()\n  {\n  const {monsters,searchfield} = this.state;\n  const filteredMonsters=monsters.filter(monster => \n    monster.name.toLowerCase().includes(searchfield.toLowerCase()));\n    return(\n      \n      <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n        <SearchBox\n        placeholder=\"search monsters\"\n        handleChange={e => this.setState({searchfield:e.target.value})}\n        />\n        <CardList monsters={filteredMonsters}/>\n    </div>\n    )\n  }}\n  export default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}